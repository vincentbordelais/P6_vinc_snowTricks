{% extends 'base.html.twig' %}
{% form_theme formComment 'bootstrap_5_layout.html.twig' %}
{% block title %} {{ trick.name }} {% endblock %}

{% block body %}
	<section class="trick">
		<div class="metadata" style="margin: 30px;">
			<div class="row">
				<div class="col-9">
					<h2>{{ trick.name }}</h2>
				</div>
				<div class="col-3">
					<div class="content">
						{% if is_granted("TRICK_EDIT", trick) %} {# vérifie les autorisations avec le voter #}
							<a href="{{ path('trick_edit', {'slug':trick.slug}) }}" class="btn btn-warning">
								<i class="fas fa-edit"></i>
							</a>
						{% endif %}
						{% if is_granted("TRICK_DELETE", trick) %} {# vérifie les autorisations avec le voter #}
							<a href="{{ path('trick_delete', {'slug':trick.slug}) }}" class="btn btn-danger" onclick="return confirm('Voulez-vous supprimer ce Trick ?')">
								<i class="fas fa-trash-alt"></i>
							</a>
						{% endif %}
					</div>
				</div>
			</div>
		</div>


		<div style="color: #8c959e;">
			Créé le {{ trick.createdDate| date('d/m/Y') }} à {{ trick.createdDate | date('h:m') }}
			puis modifier le {{ trick.updatedDate| date('d/m/Y') }} à {{ trick.updatedDate | date('h:m') }}
			par
			{{ trick.author.username }}
			<img src="{{trick.author.avatar}}" class="rounded-circle" height="24" width="24"/>
		</div>
		<div>
			{% if trick.categories %}
				{% for category in trick.categories %}
					<a href="{{ path('trick_showByCategory', {'categorySlug': category.slug}) }}" title="Voir les tricks de cette catégorie">{{ category.name }}</a>
				{% endfor %}
			{% endif %}
		</div>
		<article>
			<div class="content">
				<p>{{ trick.description }}</p>
			</div>
		</article>

		<div class="row mt-4">
			{% for image in trick.getImages() %} {# ou: in trick.images #}
				<div class="col-12 mb-3">
					<a href="{{ asset('/uploads/images/' ~ image.name) }}" target="_blank">
            			<img src="{{ asset('/uploads/images/' ~ image.name) }}" alt="Image" class="img-fluid" width="528" height="297">
        			</a>
				</div>
			{% endfor %}
		</div>

		<div class="row mt-4">
			{% for video in trick.videos %}
				<div class="col-12 mb-3 mr-3">
					{% if video.url is not null %}
						<div class="embed-responsive embed-responsive-16by9">
                			<iframe src="{{ video.getEmbedUrl() }}" class="embed-responsive-item" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture;" allowfullscreen class="img-fluid" width="528" height="297"></iframe>
						</div>
					{% endif %}
				</div>
			{% endfor %}
		</div>		
	</section>

	<section class="content">
		{% if is_granted('ROLE_USER') %}
			{{ form_start(formComment, {'attr': {'novalidate': 'novalidate'}}
			) }}
			{{ form_row(formComment.comment, {'attr' : {'placeholder' : "Salut, ..." }}
			) }}
			<button type="submit" class="btn btn-success">
				Enregistrer
			</button>
			{{ form_end(formComment) }}
		{% endif %}
	</section>
	<br>

	<section>
		<div id="js-comments"></div>
	</section>
{% endblock %}

{% block javascripts %}
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<script>
		var isAdmin = {{ is_granted('ROLE_ADMIN') ? 'true' : 'false' }};
		$(document).ready(function () {
			var page = 1;
			var morePages = true;
			var lastCalled = Date.now();
			loadComments(page);

			$(window).scroll(function () {
				if (($(window).scrollTop() + $(window).height() >= $(document).height() - 100) && morePages) {
					// Ajout d'un delai pour éviter les appels multiples à la fonction loadComments avec une seule action de scroll
					var now = Date.now();
					if (now - lastCalled > 150) {
						lastCalled = now;
						page++;
						loadComments(page);
					}
				}
			});
		});
		function loadComments(page) {
			$.ajax({
				type: 'GET',
				// #[Route('/trick/{trickSlug}/commentaires', name: 'trick_getComments', methods:["GET"])]
				url: '/trick/' + '{{ trickSlug }}' + '/commentaires?page=' + page,
				dataType: 'json',				
				success: function (data) {
					var commentCount = 0;
					// On boucle une page :
					if (typeof data.commentsData !== 'undefined') {
						for (var i = 0; i < data.commentsData.length; i++) {
							// data.commentsData.length = nombre de comments par page
							var date = new Date(data.commentsData[i].created_date);
							var dateFormatted = date.toLocaleDateString() + ' à '
								+ date.toLocaleTimeString("fr-FR", {hour: '2-digit', minute:'2-digit'});

							// console.log(data.commentsData[i].user.avatar);

							// Création de l'élément username
							var username = $("<span>")
								.text(data.commentsData[i].user.username)
								.addClass("username");
							username.append(" ");

							// Création de l'élément avatar
							var avatar = $("<img>")
								.attr("src", data.commentsData[i].user.avatar)
								.attr("height", "24")
								.attr("width", "24")
								.addClass("rounded-circle")
								.attr("alt", "Avatar de " + data.commentsData[i].user.username);

							// Création de l'élément commentaire
							var com = $("<p>")
								.append("Ecrit le " + dateFormatted + " par ")
								.append(username)
								.append(avatar)
								.append("<br>")
								.append(data.commentsData[i].comment);

							// Ajout du bouton "supprimer" si Admin :
							if (isAdmin) {
								// #[Route('/commentaires/{comment_id}/{trick_slug}/supprimer', name: 'comment_delete')]
								var deleteBtn = $("<a>")
									.attr("href", "/commentaires/" + data.commentsData[i].id + "/" + "{{ trickSlug }}" + "/supprimer")
									.addClass("btn btn-danger")
									.text("Supprimer");

								$("#js-comments").append(com);
								$("#js-comments").append(deleteBtn);
							} else {
								$("#js-comments").append(com);
							}

							// Alterner le fond gris si pair
							var backgroundColor = commentCount %2 === 0 ? '#f0f0f0':'transparent';
							com.css('background-color', backgroundColor);
							commentCount ++;
						}
						if (page >= data.totalNumberOfPages) {
							morePages = false;
						}
					}
				},
				error: function(xhr, status, error) {
					console.error('Erreur lors du chargement des commentaires : ' + error);
				}
			});
		};
	</script>
{% endblock %}
